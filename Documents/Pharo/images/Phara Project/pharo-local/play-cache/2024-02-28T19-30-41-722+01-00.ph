Object subclass: SparseMatrixEncoder [    SparseMatrixEncoder>>encodeSparse: matrix [        | sparseMatrix |        sparseMatrix := Dictionary new.                matrix withIndexDo: [ :row :i |            row withIndexDo: [ :value :j |                (value = 0) ifFalse: [                    (sparseMatrix at: i ifAbsentPut: [Dictionary new]) at: j put: value.                ].            ].        ].                ^sparseMatrix.    ]    SparseMatrixEncoder>>decodeSparse: sparseMatrix rowCount: rowCount columnCount: columnCount [        | matrix |        matrix := { {0. . columnCount - 1} asOrderedCollection. (1 to: columnCount) asOrderedCollection } asOrderedCollection: rowCount.        sparseMatrix keysAndValuesDo: [ :row :columns |            columns keysAndValuesDo: [ :column :value |                matrix at: row at: column put: value.            ].        ].        ^matrix.    ]]