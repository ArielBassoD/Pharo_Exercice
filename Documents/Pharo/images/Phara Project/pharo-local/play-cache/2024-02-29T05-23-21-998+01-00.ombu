OmEntry {
	#tags : {
		#timestamp : DateAndTime [ '2024-02-29T05:23:25.073+01:00' ],
		#self : OmReference [ '1' ]
	},
	#content : '| matrice |\r\rmatrice := { {1. 2. 3.}. {4. 5. 6.} }.\r\rmatrice do: [ :row |\r    row do: [ :element |\r        Transcript show: element printString, \' \'.\r    ].\r    Transcript show: \'\'; nl.\r].\r'
}OmEntry {
	#tags : {
		#timestamp : DateAndTime [ '2024-02-29T05:24:59.877+01:00' ],
		#self : OmReference [ '2' ]
	},
	#content : 'sumOfArray: anArray [\r    | total |\r    total := 0.\r    \r    anArray do: [ :element |\r        total := total + element.\r    ].\r\r    ^ total.\r].\r\r"Exemple d\'utilisation avec un tableau quelconque"\r| tableau exemple |\rtableau := #(1 2 3 4 5).\rexemple := sumOfArray: tableau.\r\rTranscript show: \'La somme des éléments du tableau est \', exemple printString; nl.\r'
}OmEntry {
	#tags : {
		#timestamp : DateAndTime [ '2024-02-29T05:25:07.011+01:00' ],
		#self : OmReference [ '3' ]
	},
	#content : '| tableau exemple |\rsumOfArray: anArray [\r    | total |\r    total := 0.\r    \r    anArray do: [ :element |\r        total := total + element.\r    ].\r\r    ^ total.\r].\r\r"Exemple d\'utilisation avec un tableau quelconque"\r\rtableau := #(1 2 3 4 5).\rexemple := sumOfArray: tableau.\r\rTranscript show: \'La somme des éléments du tableau est \', exemple printString; nl.\r'
}OmEntry {
	#tags : {
		#timestamp : DateAndTime [ '2024-02-29T05:26:32.223+01:00' ],
		#self : OmReference [ '4' ]
	},
	#content : 'sumOfArray: anArray [\r    ^ anArray sum.\r].\r\r"Exemple d\'utilisation avec un tableau quelconque"\r| tableau exemple |\rtableau := #(1 2 3 4 5).\rexemple := (sumOfArray: tableau).\r\rTranscript show: \'La somme des éléments du tableau est \', exemple printString; nl.\r'
}OmEntry {
	#tags : {
		#timestamp : DateAndTime [ '2024-02-29T05:28:15.446+01:00' ],
		#self : OmReference [ '5' ]
	},
	#content : '|sumOfArray tableau exemple |\rsumOfArray:=[:anArray | \r    ^ anArray sum.\r].\r\r"Exemple d\'utilisation avec un tableau quelconque"\r\rtableau := #(1 2 3 4 5).\rexemple := (sumOfArray: tableau).\r\rTranscript show: \'La somme des éléments du tableau est \', exemple printString; nl.\r'
}OmEntry {
	#tags : {
		#timestamp : DateAndTime [ '2024-02-29T05:28:26.168+01:00' ],
		#self : OmReference [ '6' ]
	},
	#content : '|sumOfArray tableau exemple |\rsumOfArray:=[:anArray | \r    ^ anArray sum.\r].\r\r"Exemple d\'utilisation avec un tableau quelconque"\r\rtableau := #(1 2 3 4 5).\rexemple := (sumOfArray value: tableau).\r\rTranscript show: \'La somme des éléments du tableau est \', exemple printString; nl.\r'
}OmEntry {
	#tags : {
		#timestamp : DateAndTime [ '2024-02-29T05:31:20.833+01:00' ],
		#self : OmReference [ '7' ]
	},
	#content : '|sumOfArray tableau exemple|\rsumOfArray := [:anArray | \r    | total |\r    total := 0.\r\r    anArray do: [:element |\r        total := total + element.\r    ].\r\r    ^ total.\r].\r\r"Exemple d\'utilisation avec un tableau quelconque"\r\rtableau := #(1 2 3 4 5).\rexemple := (sumOfArray value: tableau).\r\rTranscript show: \'La somme des éléments du tableau est \', exemple printString; nl.\r'
}OmEntry {
	#tags : {
		#timestamp : DateAndTime [ '2024-02-29T05:32:29.627+01:00' ],
		#self : OmReference [ '8' ]
	},
	#content : '|sumOfArray  tableau exemple |\rsumOfArray := [:anArray | \r    | total |\r    total := 0.\r\r    1 to: anArray size do: [:index |\r        total := total + (anArray at: index).\r    ].\r\r    ^ total.\r].\r\r"Exemple d\'utilisation avec un tableau quelconque"\r\rtableau := #(1 2 3 4 5).\rexemple := (sumOfArray value: tableau).\r\rTranscript show: \'La somme des éléments du tableau est \', exemple printString; nl.\r'
}OmEntry {
	#tags : {
		#timestamp : DateAndTime [ '2024-02-29T05:32:43.649+01:00' ],
		#self : OmReference [ '9' ]
	},
	#content : '|sumOfArray  tableau exemple |\rsumOfArray := [:anArray | \r    | total |\r    total := 0.\r\r    1 to: anArray size do: [:index |\r        total := total + (anArray at: index).\r    ].\r\r    ^ total.\r].\r\r"Exemple d\'utilisation avec un tableau quelconque"\r\rtableau := #(1 1 1 1 1).\rexemple := (sumOfArray value: tableau).\r\rTranscript show: \'La somme des éléments du tableau est \', exemple printString; nl.\r'
}OmEntry {
	#tags : {
		#timestamp : DateAndTime [ '2024-02-29T05:34:26.744+01:00' ],
		#self : OmReference [ '10' ]
	},
	#content : '|sumOfMatrix matrice exemple |\rsumOfMatrix := [:aMatrix | \r    | total |\r    total := 0.\r\r    1 to: aMatrix size do: [:rowIndex |\r        (1 to: (aMatrix at: rowIndex) size) do: [:colIndex |\r            total := total + ((aMatrix at: rowIndex) at: colIndex).\r        ].\r    ].\r\r    ^ total.\r].\r\r"Exemple d\'utilisation avec une matrice 3x3"\r\rmatrice := { {1. 2. 3.}. {4. 5. 6.}. {7. 8. 9.} }.\rexemple := (sumOfMatrix value: matrice).\r\rTranscript show: \'La somme des éléments de la matrice est \', exemple printString; nl.\r'
}OmEntry {
	#tags : {
		#timestamp : DateAndTime [ '2024-02-29T05:34:47.185+01:00' ],
		#self : OmReference [ '11' ]
	},
	#content : '|sumOfMatrix matrice exemple |\rsumOfMatrix := [:aMatrix | \r    | total |\r    total := 0.\r\r    1 to: aMatrix size do: [:rowIndex |\r        (1 to: (aMatrix at: rowIndex) size) do: [:colIndex |\r            total := total + ((aMatrix at: rowIndex) at: colIndex).\r        ].\r    ].\r\r    ^ total.\r].\r\r"Exemple d\'utilisation avec une matrice 3x3"\r\rmatrice := { {1. 1. 1.}. {1. 1. 1.}. {1. 1. 1.} }.\rexemple := (sumOfMatrix value: matrice).\r\rTranscript show: \'La somme des éléments de la matrice est \', exemple printString; nl.\r'
}OmEntry {
	#tags : {
		#timestamp : DateAndTime [ '2024-02-29T05:36:56.049+01:00' ],
		#self : OmReference [ '12' ]
	},
	#content : '\rcountNullElementsInMatrix := [:aMatrix |\r    | nullCount |\r    nullCount := 0.\r\r    1 to: aMatrix size do: [:rowIndex |\r        (1 to: (aMatrix at: rowIndex) size) do: [:colIndex |\r            (aMatrix at: rowIndex) at: colIndex = 0 ifTrue: [\r                nullCount := nullCount + 1.\r            ].\r        ].\r    ].\r\r    ^ nullCount.\r].\r\r"Exemple d\'utilisation avec une matrice 3x3"\r\rmatrice := { {1. 0. 3.}. {0. 5. 0.}. {7. 0. 9.} }.\rnullCount := (countNullElementsInMatrix value: matrice).\r\rTranscript show: \'Le nombre d\\\'éléments nuls dans la matrice est \', nullCount printString; nl.\r'
}OmEntry {
	#tags : {
		#timestamp : DateAndTime [ '2024-02-29T05:37:31.996+01:00' ],
		#self : OmReference [ '13' ]
	},
	#content : '|countNullElementsInMatrix matrice nullCount |\rcountNullElementsInMatrix := [:aMatrix |\r    | nullCount |\r    nullCount := 0.\r\r    1 to: aMatrix size do: [:rowIndex |\r        (1 to: (aMatrix at: rowIndex) size) do: [:colIndex |\r            (aMatrix at: rowIndex) at: colIndex = 0 ifTrue: [\r                nullCount := nullCount + 1.\r            ].\r        ].\r    ].\r\r    ^ nullCount.\r].\r\r"Exemple d\'utilisation avec une matrice 3x3"\r\rmatrice := { {1. 0. 3.}. {0. 5. 0.}. {7. 0. 9.} }.\rnullCount := (countNullElementsInMatrix value: matrice).\r\rTranscript show: \'Le nombre elements nuls dans la matrice est \', nullCount printString; nl.\r'
}OmEntry {
	#tags : {
		#timestamp : DateAndTime [ '2024-02-29T05:38:43.608+01:00' ],
		#self : OmReference [ '14' ]
	},
	#content : '| matrice countNullElementsInMatrix |\rcountNullElementsInMatrix := [:aMatrix |\r    | nullCount |\r    nullCount := 0.\r\r    1 to: aMatrix size do: [:rowIndex |\r        (1 to: (aMatrix at: rowIndex) size) do: [:colIndex |\r            (aMatrix at: rowIndex) at: colIndex = 0 ifTrue: [\r                nullCount := nullCount + 1.\r            ].\r        ].\r    ].\r\r    ^ nullCount.\r].\r\r"Exemple d\'utilisation avec une matrice 3x3"\r\rmatrice := { {1. 0. 3.}. {0. 5. 0.}. {7. 0. 9.} }.\rnullCount := (countNullElementsInMatrix value: matrice).\r\rTranscript show: \'Le nombre elements nuls dans la matrice est \', nullCount printString; nl.\r'
}OmEntry {
	#tags : {
		#timestamp : DateAndTime [ '2024-02-29T05:40:03.608+01:00' ],
		#self : OmReference [ '15' ]
	},
	#content : '| matrice countNullElementsInMatrix |\rcountNullElementsInMatrix := [:aMatrix |\r    | nullCount |\r    nullCount := 0.\r\r    1 to: aMatrix size do: [:rowIndex |\r        (1 to: (aMatrix at: rowIndex) size) do: [:colIndex |\r            ((aMatrix at: rowIndex) at: colIndex) = 0 ifTrue: [\r                nullCount := nullCount + 1.\r            ].\r        ].\r    ].\r\r    ^ nullCount.\r].\r\r"Exemple d\'utilisation avec une matrice 3x3"\r\rmatrice := { {1. 0. 3.}. {0. 5. 0.}. {7. 0. 9.} }.\rnullCount := (countNullElementsInMatrix value: matrice).\r\rTranscript show: \'Le nombre éléments nuls dans la matrice est \', nullCount printString; nl.\r'
}OmEntry {
	#tags : {
		#timestamp : DateAndTime [ '2024-02-29T05:40:12.47+01:00' ],
		#self : OmReference [ '16' ]
	},
	#content : '| matrice countNullElementsInMatrix |\rcountNullElementsInMatrix := [:aMatrix |\r    | nullCount |\r    nullCount := 0.\r\r    1 to: aMatrix size do: [:rowIndex |\r        (1 to: (aMatrix at: rowIndex) size) do: [:colIndex |\r            ((aMatrix at: rowIndex) at: colIndex) = 0 ifTrue: [\r                nullCount := nullCount + 1.\r            ].\r        ].\r    ].\r\r    ^ nullCount.\r].\r\r"Exemple d\'utilisation avec une matrice 3x3"\r\rmatrice := { {0. 0. 3.}. {0. 5. 0.}. {7. 0. 9.} }.\rnullCount := (countNullElementsInMatrix value: matrice).\r\rTranscript show: \'Le nombre éléments nuls dans la matrice est \', nullCount printString; nl.\r'
}OmEntry {
	#tags : {
		#timestamp : DateAndTime [ '2024-02-29T05:43:56.868+01:00' ],
		#self : OmReference [ '17' ]
	},
	#content : '|createSparseMatrix matrixSparse matrixTraditional createTraditionalMatrix |\rcreateSparseMatrix := [:matrix |\r    | numRows numCols sparseMatrix size k |\r    \r    "Taille de la matrice traditionnelle"\r    numRows := matrix size.\r    numCols := matrix first size.\r    \r    "Calcul de la taille de la matrice creuse"\r    size := 0.\r    1 to: numRows do: [:i |\r        1 to: numCols do: [:j |\r            (matrix at: i) at: j = 0 ifFalse: [\r                size := size + 1.\r            ].\r        ].\r    ].\r\r    "Initialisation de la matrice creuse"\r    sparseMatrix := Array new: (3 to: 1 by: -1) collect: [:index |\r        Array new: size.\r    ].\r\r    "Remplissage de la matrice creuse"\r    k := 1.\r    1 to: numRows do: [:i |\r        1 to: numCols do: [:j |\r            (matrix at: i) at: j = 0 ifFalse: [\r                sparseMatrix at: 1 at: k put: i.\r                sparseMatrix at: 2 at: k put: j.\r                sparseMatrix at: 3 at: k put: ((matrix at: i) at: j).\r                k := k + 1.\r            ].\r        ].\r    ].\r\r    ^ sparseMatrix.\r].\r\r\rcreateTraditionalMatrix := [:sparseMatrix |\r    | numRows numCols traditionalMatrix k |\r    \r    "Taille de la matrice creuse"\r    numRows := sparseMatrix at: 1 size.\r    numCols := sparseMatrix first size.\r    \r    "Initialisation de la matrice traditionnelle"\r    traditionalMatrix := (Array new: numRows) collect: [:index |\r        Array new: numCols withAll: 0.\r    ].\r\r   \r    k := 1.\r    1 to: sparseMatrix at: 3 size do: [:index |\r        | i j value |\r        i := sparseMatrix at: 1 at: k.\r        j := sparseMatrix at: 2 at: k.\r        value := sparseMatrix at: 3 at: k.\r        traditionalMatrix at: i at: j put: value.\r        k := k + 1.\r    ].\r\r    ^ traditionalMatrix.\r].\r\r"Exemple d\'utilisation avec une matrice traditionnelle"\r\rmatrixSparse := { {0. 0. 3. 0. 4.}. {0. 0. 5. 7. 0.}. {0. 0. 0. 0. 0.}. {0. 2. 6. 0. 0.} }.\rmatrixTraditional := (createTraditionalMatrix value: (createSparseMatrix value: matrixSparse)).\r\r"Affichage de la matrice traditionnelle résultante"\rmatrixTraditional do: [:row |\r    row do: [:element |\r        Transcript show: element printString, \' \'.\r    ].\r    Transcript show: \'\'; nl.\r].\r'
}OmEntry {
	#tags : {
		#timestamp : DateAndTime [ '2024-02-29T05:51:09.748+01:00' ],
		#self : OmReference [ '18' ]
	},
	#content : '|createSparseMatrix matrixSparse matrixTraditional createTraditionalMatrix |\rcreateSparseMatrix := [:matrix |\r    | numRows numCols sparseMatrix size k |\r    \r    "Taille de la matrice traditionnelle"\r    numRows := matrix size.\r    numCols := matrix first size.\r    \r    "Calcul de la taille de la matrice creuse"\r    size := 0.\r    1 to: numRows do: [:i |\r        1 to: numCols do: [:j |\r            (matrix at: i) at: j = 0 ifFalse: [\r                size := size + 1.\r            ].\r        ].\r    ].\r\r    "Initialisation de la matrice creuse"\r    sparseMatrix := Array new: (3 to: 1 by: -1) collect: [:index |\r        Array new: size.\r    ].\r\r    "Remplissage de la matrice creuse"\r    k := 1.\r    1 to: numRows do: [:i |\r        1 to: numCols do: [:j |\r            | element |\relement := (matrix at: i) at: j.ifFalse: [\r                sparseMatrix at: 1 at: k put: i.\r                sparseMatrix at: 2 at: k put: j.\r                sparseMatrix at: 3 at: k put: ((matrix at: i) at: j).\r                k := k + 1.\r            ].\r        ].\r    ].\r\r    ^ sparseMatrix.\r].\r\r\rcreateTraditionalMatrix := [:sparseMatrix |\r    | numRows numCols traditionalMatrix k |\r    \r    "Taille de la matrice creuse"\r    numRows := sparseMatrix at: 1 size.\r    numCols := sparseMatrix first size.\r    \r    "Initialisation de la matrice traditionnelle"\r    traditionalMatrix := (Array new: numRows) collect: [:index |\r        Array new: numCols withAll: 0.\r    ].\r\r   \r    k := 1.\r    1 to: sparseMatrix at: 3 size do: [:index |\r        | i j value |\r        i := sparseMatrix at: 1 at: k.\r        j := sparseMatrix at: 2 at: k.\r        value := sparseMatrix at: 3 at: k.\r        traditionalMatrix at: i at: j put: value.\r        k := k + 1.\r    ].\r\r    ^ traditionalMatrix.\r].\r\r"Exemple d\'utilisation avec une matrice traditionnelle"\r\rmatrixSparse := { {0. 0. 3. 0. 4.}. {0. 0. 5. 7. 0.}. {0. 0. 0. 0. 0.}. {0. 2. 6. 0. 0.} }.\rmatrixTraditional := (createTraditionalMatrix value: (createSparseMatrix value: matrixSparse)).\r\r"Affichage de la matrice traditionnelle résultante"\rmatrixTraditional do: [:row |\r    row do: [:element |\r        Transcript show: element printString, \' \'.\r    ].\r    Transcript show: \'\'; nl.\r].\r'
}OmEntry {
	#tags : {
		#timestamp : DateAndTime [ '2024-02-29T05:51:37.169+01:00' ],
		#self : OmReference [ '19' ]
	},
	#content : '|createSparseMatrix matrixSparse matrixTraditional createTraditionalMatrix |\rcreateSparseMatrix := [:matrix |\r    | numRows numCols sparseMatrix size k |\r    \r    "Taille de la matrice traditionnelle"\r    numRows := matrix size.\r    numCols := matrix first size.\r    \r    "Calcul de la taille de la matrice creuse"\r    size := 0.\r    1 to: numRows do: [:i |\r        1 to: numCols do: [:j |\r            (matrix at: i) at: j = 0 ifFalse: [\r                size := size + 1.\r            ].\r        ].\r    ].\r\r    "Initialisation de la matrice creuse"\r    sparseMatrix := Array new: (3 to: 1 by: -1) collect: [:index |\r        Array new: size.\r    ].\r\r    "Remplissage de la matrice creuse"\r    k := 1.\r    1 to: numRows do: [:i |\r        1 to: numCols do: [:j |\r            (matrix at: i) at: j = 0 ifFalse: [\r                sparseMatrix at: 1 at: k put: i.\r                sparseMatrix at: 2 at: k put: j.\r                sparseMatrix at: 3 at: k put: ((matrix at: i) at: j).\r                k := k + 1.\r            ].\r        ].\r    ].\r\r    ^ sparseMatrix.\r].\r\r\rcreateTraditionalMatrix := [:sparseMatrix |\r    | numRows numCols traditionalMatrix k |\r    \r    "Taille de la matrice creuse"\r    numRows := sparseMatrix at: 1 size.\r    numCols := sparseMatrix first size.\r    \r    "Initialisation de la matrice traditionnelle"\r    traditionalMatrix := (Array new: numRows) collect: [:index |\r        Array new: numCols withAll: 0.\r    ].\r\r   \r    k := 1.\r    1 to: sparseMatrix at: 3 size do: [:index |\r        | i j value |\r        i := sparseMatrix at: 1 at: k.\r        j := sparseMatrix at: 2 at: k.\r        value := sparseMatrix at: 3 at: k.\r        traditionalMatrix at: i at: j put: value.\r        k := k + 1.\r    ].\r\r    ^ traditionalMatrix.\r].\r\r"Exemple d\'utilisation avec une matrice traditionnelle"\r\rmatrixSparse := { {0. 0. 3. 0. 4.}. {0. 0. 5. 7. 0.}. {0. 0. 0. 0. 0.}. {0. 2. 6. 0. 0.} }.\rmatrixTraditional := (createTraditionalMatrix value: (createSparseMatrix value: matrixSparse)).\r\r"Affichage de la matrice traditionnelle résultante"\rmatrixTraditional do: [:row |\r    row do: [:element |\r        Transcript show: element printString, \' \'.\r    ].\r    Transcript show: \'\'; nl.\r].\r'
}OmEntry {
	#tags : {
		#timestamp : DateAndTime [ '2024-02-29T05:52:17.141+01:00' ],
		#self : OmReference [ '20' ]
	},
	#content : '"Création de la représentation creuse à partir de la représentation traditionnelle"\rcreateSparseMatrix := [:matrix |\r    | numRows numCols sparseMatrix size k |\r    \r    "Taille de la matrice traditionnelle"\r    numRows := matrix size.\r    numCols := matrix first size.\r    \r    "Calcul de la taille de la matrice creuse"\r    size := 0.\r    1 to: numRows do: [:i |\r        1 to: numCols do: [:j |\r            | element |\r            element := (matrix at: i) at: j.\r            (element = 0) ifFalse: [\r                size := size + 1.\r            ].\r        ].\r    ].\r\r    "Initialisation de la matrice creuse"\r    sparseMatrix := Array new: (3 to: 1 by: -1) collect: [:index |\r        Array new: size.\r    ].\r\r    "Remplissage de la matrice creuse"\r    k := 1.\r    1 to: numRows do: [:i |\r        1 to: numCols do: [:j |\r            | element |\r            element := (matrix at: i) at: j.\r            (element = 0) ifFalse: [\r                sparseMatrix at: 1 at: k put: i.\r                sparseMatrix at: 2 at: k put: j.\r                sparseMatrix at: 3 at: k put: element.\r                k := k + 1.\r            ].\r        ].\r    ].\r\r    ^ sparseMatrix.\r].\r\r"Création de la représentation traditionnelle à partir de la représentation creuse"\rcreateTraditionalMatrix := [:sparseMatrix |\r    | numRows numCols traditionalMatrix k |\r    \r    "Taille de la matrice creuse"\r    numRows := sparseMatrix at: 1 size.\r    numCols := sparseMatrix first size.\r    \r    "Initialisation de la matrice traditionnelle"\r    traditionalMatrix := (Array new: numRows) collect: [:index |\r        Array new: numCols withAll: 0.\r    ].\r\r    "Remplissage de la matrice traditionnelle"\r    k := 1.\r    1 to: sparseMatrix at: 3 size do: [:index |\r        | i j value |\r        i := sparseMatrix at: 1 at: k.\r        j := sparseMatrix at: 2 at: k.\r        value := sparseMatrix at: 3 at: k.\r        traditionalMatrix at: i at: j put: value.\r        k := k + 1.\r    ].\r\r    ^ traditionalMatrix.\r].\r\r"Exemple d\'utilisation avec une matrice traditionnelle"\r| matrixSparse matrixTraditional |\rmatrixSparse := { {0. 0. 3. 0. 4.}. {0. 0. 5. 7. 0.}. {0. 0. 0. 0. 0.}. {0. 2. 6. 0. 0.} }.\rmatrixTraditional := (createTraditionalMatrix value: (createSparseMatrix value: matrixSparse)).\r\r"Affichage de la matrice traditionnelle résultante"\rmatrixTraditional do: [:row |\r    row do: [:element |\r        Transcript show: element printString, \' \'.\r    ].\r    Transcript show: \'\'; nl.\r].\r'
}OmEntry {
	#tags : {
		#timestamp : DateAndTime [ '2024-02-29T05:52:38.312+01:00' ],
		#self : OmReference [ '21' ]
	},
	#content : '|createSparseMatrix  matrixSparse matrixTraditional |\rcreateSparseMatrix := [:matrix |\r    | numRows numCols sparseMatrix size k |\r    \r    "Taille de la matrice traditionnelle"\r    numRows := matrix size.\r    numCols := matrix first size.\r    \r    "Calcul de la taille de la matrice creuse"\r    size := 0.\r    1 to: numRows do: [:i |\r        1 to: numCols do: [:j |\r            | element |\r            element := (matrix at: i) at: j.\r            (element = 0) ifFalse: [\r                size := size + 1.\r            ].\r        ].\r    ].\r\r    "Initialisation de la matrice creuse"\r    sparseMatrix := Array new: (3 to: 1 by: -1) collect: [:index |\r        Array new: size.\r    ].\r\r    "Remplissage de la matrice creuse"\r    k := 1.\r    1 to: numRows do: [:i |\r        1 to: numCols do: [:j |\r            | element |\r            element := (matrix at: i) at: j.\r            (element = 0) ifFalse: [\r                sparseMatrix at: 1 at: k put: i.\r                sparseMatrix at: 2 at: k put: j.\r                sparseMatrix at: 3 at: k put: element.\r                k := k + 1.\r            ].\r        ].\r    ].\r\r    ^ sparseMatrix.\r].\r\r"Création de la représentation traditionnelle à partir de la représentation creuse"\rcreateTraditionalMatrix := [:sparseMatrix |\r    | numRows numCols traditionalMatrix k |\r    \r    "Taille de la matrice creuse"\r    numRows := sparseMatrix at: 1 size.\r    numCols := sparseMatrix first size.\r    \r    "Initialisation de la matrice traditionnelle"\r    traditionalMatrix := (Array new: numRows) collect: [:index |\r        Array new: numCols withAll: 0.\r    ].\r\r    "Remplissage de la matrice traditionnelle"\r    k := 1.\r    1 to: sparseMatrix at: 3 size do: [:index |\r        | i j value |\r        i := sparseMatrix at: 1 at: k.\r        j := sparseMatrix at: 2 at: k.\r        value := sparseMatrix at: 3 at: k.\r        traditionalMatrix at: i at: j put: value.\r        k := k + 1.\r    ].\r\r    ^ traditionalMatrix.\r].\r\r"Exemple d\'utilisation avec une matrice traditionnelle"\r\rmatrixSparse := { {0. 0. 3. 0. 4.}. {0. 0. 5. 7. 0.}. {0. 0. 0. 0. 0.}. {0. 2. 6. 0. 0.} }.\rmatrixTraditional := (createTraditionalMatrix value: (createSparseMatrix value: matrixSparse)).\r\r"Affichage de la matrice traditionnelle résultante"\rmatrixTraditional do: [:row |\r    row do: [:element |\r        Transcript show: element printString, \' \'.\r    ].\r    Transcript show: \'\'; nl.\r].\r'
}OmEntry {
	#tags : {
		#timestamp : DateAndTime [ '2024-02-29T05:52:46.066+01:00' ],
		#self : OmReference [ '22' ]
	},
	#content : '|createSparseMatrix  matrixSparse matrixTraditional createTraditionalMatrix|\rcreateSparseMatrix := [:matrix |\r    | numRows numCols sparseMatrix size k |\r    \r    "Taille de la matrice traditionnelle"\r    numRows := matrix size.\r    numCols := matrix first size.\r    \r    "Calcul de la taille de la matrice creuse"\r    size := 0.\r    1 to: numRows do: [:i |\r        1 to: numCols do: [:j |\r            | element |\r            element := (matrix at: i) at: j.\r            (element = 0) ifFalse: [\r                size := size + 1.\r            ].\r        ].\r    ].\r\r    "Initialisation de la matrice creuse"\r    sparseMatrix := Array new: (3 to: 1 by: -1) collect: [:index |\r        Array new: size.\r    ].\r\r    "Remplissage de la matrice creuse"\r    k := 1.\r    1 to: numRows do: [:i |\r        1 to: numCols do: [:j |\r            | element |\r            element := (matrix at: i) at: j.\r            (element = 0) ifFalse: [\r                sparseMatrix at: 1 at: k put: i.\r                sparseMatrix at: 2 at: k put: j.\r                sparseMatrix at: 3 at: k put: element.\r                k := k + 1.\r            ].\r        ].\r    ].\r\r    ^ sparseMatrix.\r].\r\r"Création de la représentation traditionnelle à partir de la représentation creuse"\rcreateTraditionalMatrix := [:sparseMatrix |\r    | numRows numCols traditionalMatrix k |\r    \r    "Taille de la matrice creuse"\r    numRows := sparseMatrix at: 1 size.\r    numCols := sparseMatrix first size.\r    \r    "Initialisation de la matrice traditionnelle"\r    traditionalMatrix := (Array new: numRows) collect: [:index |\r        Array new: numCols withAll: 0.\r    ].\r\r    "Remplissage de la matrice traditionnelle"\r    k := 1.\r    1 to: sparseMatrix at: 3 size do: [:index |\r        | i j value |\r        i := sparseMatrix at: 1 at: k.\r        j := sparseMatrix at: 2 at: k.\r        value := sparseMatrix at: 3 at: k.\r        traditionalMatrix at: i at: j put: value.\r        k := k + 1.\r    ].\r\r    ^ traditionalMatrix.\r].\r\r"Exemple d\'utilisation avec une matrice traditionnelle"\r\rmatrixSparse := { {0. 0. 3. 0. 4.}. {0. 0. 5. 7. 0.}. {0. 0. 0. 0. 0.}. {0. 2. 6. 0. 0.} }.\rmatrixTraditional := (createTraditionalMatrix value: (createSparseMatrix value: matrixSparse)).\r\r"Affichage de la matrice traditionnelle résultante"\rmatrixTraditional do: [:row |\r    row do: [:element |\r        Transcript show: element printString, \' \'.\r    ].\r    Transcript show: \'\'; nl.\r].\r'
}OmEntry {
	#tags : {
		#timestamp : DateAndTime [ '2024-02-29T05:53:51.468+01:00' ],
		#self : OmReference [ '23' ]
	},
	#content : '|createSparseMatrix  matrixSparse matrixTraditional createTraditionalMatrix|\rcreateSparseMatrix := [:matrix |\r    | numRows numCols sparseMatrix size k |\r    \r    "Taille de la matrice traditionnelle"\r    numRows := matrix size.\r    numCols := matrix first size.\r    \r    "Calcul de la taille de la matrice creuse"\r    size := 0.\r    1 to: numRows do: [:i |\r        1 to: numCols do: [:j |\r            | element |\r            element := (matrix at: i) at: j.\r            (element = 0) ifFalse: [\r                size := size + 1.\r            ].\r        ].\r    ].\r\r"Initialisation de la matrice creuse"\rsparseMatrix := (3 to: 1 by: -1) collect: [:index |\r    (Array new: size) copy: 0.\r].\r\r\r    "Remplissage de la matrice creuse"\r    k := 1.\r    1 to: numRows do: [:i |\r        1 to: numCols do: [:j |\r            | element |\r            element := (matrix at: i) at: j.\r            (element = 0) ifFalse: [\r                sparseMatrix at: 1 at: k put: i.\r                sparseMatrix at: 2 at: k put: j.\r                sparseMatrix at: 3 at: k put: element.\r                k := k + 1.\r            ].\r        ].\r    ].\r\r    ^ sparseMatrix.\r].\r\r"Création de la représentation traditionnelle à partir de la représentation creuse"\rcreateTraditionalMatrix := [:sparseMatrix |\r    | numRows numCols traditionalMatrix k |\r    \r    "Taille de la matrice creuse"\r    numRows := sparseMatrix at: 1 size.\r    numCols := sparseMatrix first size.\r    \r    "Initialisation de la matrice traditionnelle"\r    traditionalMatrix := (Array new: numRows) collect: [:index |\r        Array new: numCols withAll: 0.\r    ].\r\r    "Remplissage de la matrice traditionnelle"\r    k := 1.\r    1 to: sparseMatrix at: 3 size do: [:index |\r        | i j value |\r        i := sparseMatrix at: 1 at: k.\r        j := sparseMatrix at: 2 at: k.\r        value := sparseMatrix at: 3 at: k.\r        traditionalMatrix at: i at: j put: value.\r        k := k + 1.\r    ].\r\r    ^ traditionalMatrix.\r].\r\r"Exemple d\'utilisation avec une matrice traditionnelle"\r\rmatrixSparse := { {0. 0. 3. 0. 4.}. {0. 0. 5. 7. 0.}. {0. 0. 0. 0. 0.}. {0. 2. 6. 0. 0.} }.\rmatrixTraditional := (createTraditionalMatrix value: (createSparseMatrix value: matrixSparse)).\r\r"Affichage de la matrice traditionnelle résultante"\rmatrixTraditional do: [:row |\r    row do: [:element |\r        Transcript show: element printString, \' \'.\r    ].\r    Transcript show: \'\'; nl.\r].\r'
}OmEntry {
	#tags : {
		#timestamp : DateAndTime [ '2024-02-29T05:54:38.244+01:00' ],
		#self : OmReference [ '24' ]
	},
	#content : '|createSparseMatrix  matrixSparse matrixTraditional createTraditionalMatrix|\rcreateSparseMatrix := [:matrix |\r    | numRows numCols sparseMatrix size k |\r    \r    "Taille de la matrice traditionnelle"\r    numRows := matrix size.\r    numCols := matrix first size.\r    \r    "Calcul de la taille de la matrice creuse"\r    size := 0.\r    1 to: numRows do: [:i |\r        1 to: numCols do: [:j |\r            | element |\r            element := (matrix at: i) at: j.\r            (element = 0) ifFalse: [\r                size := size + 1.\r            ].\r        ].\r    ].\r\r"Initialisation de la matrice creuse"\rsparseMatrix := (3 to: 1 by: -1) collect: [:index |\r    Array new: size.\r].\r\r\r\r    "Remplissage de la matrice creuse"\r    k := 1.\r    1 to: numRows do: [:i |\r        1 to: numCols do: [:j |\r            | element |\r            element := (matrix at: i) at: j.\r            (element = 0) ifFalse: [\r                sparseMatrix at: 1 at: k put: i.\r                sparseMatrix at: 2 at: k put: j.\r                sparseMatrix at: 3 at: k put: element.\r                k := k + 1.\r            ].\r        ].\r    ].\r\r    ^ sparseMatrix.\r].\r\r"Création de la représentation traditionnelle à partir de la représentation creuse"\rcreateTraditionalMatrix := [:sparseMatrix |\r    | numRows numCols traditionalMatrix k |\r    \r    "Taille de la matrice creuse"\r    numRows := sparseMatrix at: 1 size.\r    numCols := sparseMatrix first size.\r    \r    "Initialisation de la matrice traditionnelle"\r    traditionalMatrix := (Array new: numRows) collect: [:index |\r        Array new: numCols withAll: 0.\r    ].\r\r    "Remplissage de la matrice traditionnelle"\r    k := 1.\r    1 to: sparseMatrix at: 3 size do: [:index |\r        | i j value |\r        i := sparseMatrix at: 1 at: k.\r        j := sparseMatrix at: 2 at: k.\r        value := sparseMatrix at: 3 at: k.\r        traditionalMatrix at: i at: j put: value.\r        k := k + 1.\r    ].\r\r    ^ traditionalMatrix.\r].\r\r"Exemple d\'utilisation avec une matrice traditionnelle"\r\rmatrixSparse := { {0. 0. 3. 0. 4.}. {0. 0. 5. 7. 0.}. {0. 0. 0. 0. 0.}. {0. 2. 6. 0. 0.} }.\rmatrixTraditional := (createTraditionalMatrix value: (createSparseMatrix value: matrixSparse)).\r\r"Affichage de la matrice traditionnelle résultante"\rmatrixTraditional do: [:row |\r    row do: [:element |\r        Transcript show: element printString, \' \'.\r    ].\r    Transcript show: \'\'; nl.\r].\r'
}OmEntry {
	#tags : {
		#timestamp : DateAndTime [ '2024-02-29T05:56:57.722+01:00' ],
		#self : OmReference [ '25' ]
	},
	#content : '|createSparseMatrix matrixSparse matrixTraditional createTraditionalMatrix |\rcreateSparseMatrix := [:matrix |\r    | numRows numCols sparseMatrix size k |\r    \r    "Taille de la matrice traditionnelle"\r    numRows := matrix size.\r    numCols := matrix first size.\r    \r    "Calcul de la taille de la matrice creuse"\r    size := 0.\r    1 to: numRows do: [:i |\r        1 to: numCols do: [:j |\r            | element |\r            element := (matrix at: i) at: j.\r            (element = 0) ifFalse: [\r                size := size + 1.\r            ].\r        ].\r    ].\r\r    "Initialisation de la matrice creuse"\r    sparseMatrix := (3 to: 1 by: -1) collect: [:index |\r        Array new: size.\r    ].\r\r    "Remplissage de la matrice creuse"\r    k := 1.\r    1 to: numRows do: [:i |\r        1 to: numCols do: [:j |\r            | element |\r            element := (matrix at: i) at: j.\r            (element = 0) ifFalse: [\r                (sparseMatrix at: 1) at: k put: i.\r                (sparseMatrix at: 2) at: k put: j.\r                (sparseMatrix at: 3) at: k put: element.\r                k := k + 1.\r            ].\r        ].\r    ].\r\r    ^ sparseMatrix.\r].\r\r"Création de la représentation traditionnelle à partir de la représentation creuse"\rcreateTraditionalMatrix := [:sparseMatrix |\r    | numRows numCols traditionalMatrix k |\r    \r    "Taille de la matrice creuse"\r    numRows := sparseMatrix at: 1 size.\r    numCols := sparseMatrix first size.\r    \r    "Initialisation de la matrice traditionnelle"\r    traditionalMatrix := (Array new: numRows) collect: [:index |\r        Array new: numCols withAll: 0.\r    ].\r\r    "Remplissage de la matrice traditionnelle"\r    k := 1.\r    1 to: sparseMatrix at: 3 size do: [:index |\r        | i j value |\r        i := (sparseMatrix at: 1) at: k.\r        j := (sparseMatrix at: 2) at: k.\r        value := (sparseMatrix at: 3) at: k.\r        traditionalMatrix at: i at: j put: value.\r        k := k + 1.\r    ].\r\r    ^ traditionalMatrix.\r].\r\r"Exemple d\'utilisation avec une matrice traditionnelle"\r\rmatrixSparse := { {0. 0. 3. 0. 4.}. {0. 0. 5. 7. 0.}. {0. 0. 0. 0. 0.}. {0. 2. 6. 0. 0.} }.\rmatrixTraditional := (createTraditionalMatrix value: (createSparseMatrix value: matrixSparse)).\r\r"Affichage de la matrice traditionnelle résultante"\rmatrixTraditional do: [:row |\r    row do: [:element |\r        Transcript show: element printString, \' \'.\r    ].\r    Transcript show: \'\'; nl.\r].\r'
}OmEntry {
	#tags : {
		#timestamp : DateAndTime [ '2024-02-29T05:58:29.175+01:00' ],
		#self : OmReference [ '26' ]
	},
	#content : '|createSparseMatrix matrixSparse matrixTraditional createTraditionalMatrix |\rcreateSparseMatrix := [:matrix |\r    | numRows numCols sparseMatrix size k |\r    \r    numRows := matrix size.\r    numCols := matrix first size.\r    \r    "Calcul de la taille de la matrice creuse"\r    size := 0.\r    1 to: numRows do: [:i |\r        1 to: numCols do: [:j |\r            | element |\r            element := (matrix at: i) at: j.\r            (element = 0) ifFalse: [\r                size := size + 1.\r            ].\r        ].\r    ].\r\r    sparseMatrix := (3 to: 1 by: -1) collect: [:index |\r        Array new: size.\r    ].\r\r    k := 1.\r    1 to: numRows do: [:i |\r        1 to: numCols do: [:j |\r            | element |\r            element := (matrix at: i) at: j.\r            (element = 0) ifFalse: [\r                (sparseMatrix at: 1) at: k put: i.\r                (sparseMatrix at: 2) at: k put: j.\r                (sparseMatrix at: 3) at: k put: element.\r                k := k + 1.\r            ].\r        ].\r    ].\r\r    ^ sparseMatrix.\r].\r\r"Création de la représentation traditionnelle à partir de la représentation creuse"\rcreateTraditionalMatrix := [:sparseMatrix |\r    | numRows numCols traditionalMatrix k |\r    \r    numRows := sparseMatrix at: 1 size.\r    numCols := sparseMatrix first size.\r    \r    traditionalMatrix := (Array new: numRows) collect: [:index |\r        Array new: numCols withAll: 0.\r    ].\r\r \r    k := 1.\r    1 to: sparseMatrix at: 3 size do: [:index |\r        | i j value |\r        i := (sparseMatrix at: 1) at: k.\r        j := (sparseMatrix at: 2) at: k.\r        value := (sparseMatrix at: 3) at: k.\r        traditionalMatrix at: i at: j put: value.\r        k := k + 1.\r    ].\r\r    ^ traditionalMatrix.\r].\r\r\rmatrixSparse := { {0. 0. 3. 0. 4.}. {0. 0. 5. 7. 0.}. {0. 0. 0. 0. 0.}. {0. 2. 6. 0. 0.} }.\rmatrixTraditional := (createTraditionalMatrix value: (createSparseMatrix value: matrixSparse)).\r\r\rmatrixTraditional do: [:row |\r    row do: [:element |\r        Transcript show: element printString, \' \'.\r    ].\r    Transcript show: \'\'; nl.\r].\r'
}OmEntry {
	#tags : {
		#timestamp : DateAndTime [ '2024-02-29T06:14:05.723+01:00' ],
		#self : OmReference [ '27' ]
	},
	#content : '|createSparseMatrix matrixSparse matrixTraditional createTraditionalMatrix |\rcreateSparseMatrix := [:matrix |\r    | numRows numCols sparseMatrix size k |\r    numRows := matrix size.\r    numCols := matrix first size.    \r    size := 0.\r    1 to: numRows do: [:i |\r        1 to: numCols do: [:j |\r            | element |\r            element := (matrix at: i) at: j.\r            (element = 0) ifFalse: [\r                size := size + 1.\r            ].\r        ].\r    ].\r\r    sparseMatrix := (3 to: 1 by: -1) collect: [:index |\r        Array new: size.\r    ].\r\r    k := 1.\r    1 to: numRows do: [:i |\r        1 to: numCols do: [:j |\r            | element |\r            element := (matrix at: i) at: j.\r            (element = 0) ifFalse: [\r                (sparseMatrix at: 1) at: k put: i.\r                (sparseMatrix at: 2) at: k put: j.\r                (sparseMatrix at: 3) at: k put: element.\r                k := k + 1.\r            ].\r        ].\r    ].\r\r    ^ sparseMatrix.\r].\r\rcreateTraditionalMatrix := [:sparseMatrix |\r    | numRows numCols traditionalMatrix k |\r    \r    numRows := sparseMatrix at: 1 size.\r    numCols := sparseMatrix first size.\r    \r    traditionalMatrix := (Array new: numRows) collect: [:index |\r        Array new: numCols withAll: 0.\r    ].\r    k := 1.\r    1 to: sparseMatrix at: 3 size do: [:index |\r        | i j value |\r        i := (sparseMatrix at: 1) at: k.\r        j := (sparseMatrix at: 2) at: k.\r        value := (sparseMatrix at: 3) at: k.\r        traditionalMatrix at: i at: j put: value.\r        k := k + 1.\r    ].\r\r    ^ traditionalMatrix.\r].\r\rmatrixSparse := { {0. 0. 3. 0. 4.}. {0. 0. 5. 7. 0.}. {0. 0. 0. 0. 0.}. {0. 2. 6. 0. 0.} }.\rmatrixTraditional := (createTraditionalMatrix value: (createSparseMatrix value: matrixSparse)).\rmatrixTraditional do: [:row |\r    row do: [:element |\r        Transcript show: element printString, \' \'.\r    ].\r    Transcript show: \'\'; nl.\r].\r'
}